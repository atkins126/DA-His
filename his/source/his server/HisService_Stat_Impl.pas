unit HisService_Stat_Impl;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ This is where you are supposed to code the implementation of your objects. }
{----------------------------------------------------------------------------}

{$I RemObjects.inc}

interface

uses
  {vcl:} Classes, SysUtils, App_DAServer, HisService_Stat_Backend,
  {RemObjects:} uROXMLIntf, uROClientIntf, uROTypes, uROServer, uROServerIntf, uROSessions,
  {Required:} uRORemoteDataModule,
  {Ancestor Implementation:} DataAbstractService_Impl,
  {Used RODLs:} DataAbstract4_Intf,
  {Generated:} HisLibrary_Intf, uROClient, uDADataStreamer,
  uDABin2DataStreamer, uDAInterfaces, uDAFields, uDADelta, uROComponent;

type
  { THisService_Stat }
  THisService_Stat = class(TDataAbstractService, IHisService_Stat)
    procedure DataAbstractServiceCreate(Sender: TObject);
    procedure DataAbstractServiceActivate(const aClientID: TGUID;
      aSession: TROSession; const aMessage: IROMessage);
    procedure DataAbstractServiceDeactivate(const aClientID: TGUID;
      aSession: TROSession);
    procedure DataAbstractServiceUpdateDataBeginTransaction(
      Sender: TObject; var aUseDefaultTransactionLogic: Boolean);
  private
  protected
    { IHisService_Stat methods }
  end;

implementation

{$IFDEF DELPHIXE2UP}
{%CLASSGROUP 'System.Classes.TPersistent'}
{$ENDIF}

{$IFNDEF FPC}
  {$R *.dfm}
{$ELSE}
  {$R *.lfm}
{$ENDIF}
uses
  {Generated:} HisLibrary_Invk, uROClassFactories;

procedure Create_HisService_Stat(out anInstance : IUnknown);
begin
  anInstance := THisService_Stat.Create(nil);
end;

{ HisService_Stat }
var
  fClassFactory: IROClassFactory;
procedure THisService_Stat.DataAbstractServiceCreate(Sender: TObject);
begin
  AllowWhereSql := True;
end;

procedure THisService_Stat.DataAbstractServiceActivate(
  const aClientID: TGUID; aSession: TROSession;
  const aMessage: IROMessage);
begin
  ServiceDataStreamer := StatBackend.GetDAStreamer;
  ServiceSchema := StatBackend.GetSchema;
end;

procedure THisService_Stat.DataAbstractServiceDeactivate(
  const aClientID: TGUID; aSession: TROSession);
begin
  ServiceSchema := nil;
end;

procedure THisService_Stat.DataAbstractServiceUpdateDataBeginTransaction(
  Sender: TObject; var aUseDefaultTransactionLogic: Boolean);
begin
  aUseDefaultTransactionLogic := False;
end;

initialization
  fClassFactory := TROPooledClassFactory.Create('HisService_Stat',
    {$IFDEF FPC}@{$ENDIF}Create_HisService_Stat, THisService_Stat_Invoker, 8);
  // RegisterForZeroConf(fClassFactory,'_HisService_Stat_rosdk._tcp.');

finalization
  UnRegisterClassFactory(fClassFactory);
  fClassFactory := nil;

end.
