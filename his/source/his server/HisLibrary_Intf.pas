unit HisLibrary_Intf;

// ----------------------------------------------------------------------
//  This file was automatically generated by Remoting SDK from a
//  RODL file downloaded from a server or associated with this project.
//
//  Do not modify this file manually, or your changes will be lost when
//  it is regenerated the next time you update your RODL.
// ----------------------------------------------------------------------

{$I RemObjects.inc}

interface

uses
  {$IFDEF DELPHIXE2UP}System.SysUtils{$ELSE}SysUtils{$ENDIF},
  {$IFDEF DELPHIXE2UP}System.Classes{$ELSE}Classes{$ENDIF},
  {$IFDEF DELPHIXE2UP}System.TypInfo{$ELSE}TypInfo{$ENDIF},
  uROEncoding,
  uROUri,
  uROProxy,
  uROExceptions,
  uROXMLIntf,
  uROClasses,
  uROTypes,
  uROClientIntf,
  uROAsync,
  uROEventReceiver,
  DataAbstract4_Intf;

const LibraryUID: String = '{EC0A790D-DA2A-4CB5-8896-9D18FF898EB9}';
const DefaultNamespace: String = 'HisLibrary';
const TargetNamespace: String = 'HisLibrary';
const IHisService_Base_IID: TGUID = '{4CE2B46D-A4ED-49F7-A61A-D191B6CE5AED}';
const IHisService_Clinic_IID: TGUID = '{1C385F48-3A91-4F12-83AE-D58168D762AF}';
const IHisService_Dict_IID: TGUID = '{723496C0-1F70-40F3-AAAF-B16C889409AC}';
const IHisService_Extend_IID: TGUID = '{302E8555-52AC-493F-837C-674FB6D836D9}';
const IHisService_Hosp_IID: TGUID = '{11757C5E-F670-4A43-9D41-3240EF47F6C4}';
const IHisService_Login_IID: TGUID = '{10F949D2-44BC-4DCC-AF4B-7753639820E8}';
const IHisService_Medicine_IID: TGUID = '{E4228A93-FCF8-4622-9893-AA9E28733854}';
const IHisService_Report_IID: TGUID = '{6C048047-65AB-41D3-992D-006CC36A489C}';
const IHisService_Stat_IID: TGUID = '{061D6006-7BA4-4592-B850-062C42CE7C6F}';
const IHisService_System_IID: TGUID = '{1FC9C29C-F27D-43EC-8457-A461CA435F00}';
const IHisService_XNH_IID: TGUID = '{2DCAC131-1FFD-471C-BFD5-ABD666917F71}';
const IHisService_YB_IID: TGUID = '{39B98954-04FC-4673-A0EF-4B25F2A9AD88}';
type
  { Forward declarations }
  IHisService_System = interface;
  IHisService_System_Async = interface;
  IHisService_System_AsyncEx = interface;
  IHisService_Clinic = interface;
  IHisService_Clinic_Async = interface;
  IHisService_Clinic_AsyncEx = interface;
  IHisService_Medicine = interface;
  IHisService_Medicine_Async = interface;
  IHisService_Medicine_AsyncEx = interface;
  IHisService_Hosp = interface;
  IHisService_Hosp_Async = interface;
  IHisService_Hosp_AsyncEx = interface;
  IHisService_Base = interface;
  IHisService_Base_Async = interface;
  IHisService_Base_AsyncEx = interface;
  IHisService_YB = interface;
  IHisService_YB_Async = interface;
  IHisService_YB_AsyncEx = interface;
  IHisService_XNH = interface;
  IHisService_XNH_Async = interface;
  IHisService_XNH_AsyncEx = interface;
  IHisService_Dict = interface;
  IHisService_Dict_Async = interface;
  IHisService_Dict_AsyncEx = interface;
  IHisService_Extend = interface;
  IHisService_Extend_Async = interface;
  IHisService_Extend_AsyncEx = interface;
  IHisService_Stat = interface;
  IHisService_Stat_Async = interface;
  IHisService_Stat_AsyncEx = interface;
  IHisService_Login = interface;
  IHisService_Login_Async = interface;
  IHisService_Login_AsyncEx = interface;
  IHisService_Report = interface;
  IHisService_Report_Async = interface;
  IHisService_Report_AsyncEx = interface;
  CoHisService_System = class;
  CoHisService_System_Async = class;
  CoHisService_System_AsyncEx = class;
  THisService_System_Proxy = class;
  THisService_System_AsyncProxy = class;
  THisService_System_AsyncProxyEx = class;
  CoHisService_Clinic = class;
  CoHisService_Clinic_Async = class;
  CoHisService_Clinic_AsyncEx = class;
  THisService_Clinic_Proxy = class;
  THisService_Clinic_AsyncProxy = class;
  THisService_Clinic_AsyncProxyEx = class;
  CoHisService_Medicine = class;
  CoHisService_Medicine_Async = class;
  CoHisService_Medicine_AsyncEx = class;
  THisService_Medicine_Proxy = class;
  THisService_Medicine_AsyncProxy = class;
  THisService_Medicine_AsyncProxyEx = class;
  CoHisService_Hosp = class;
  CoHisService_Hosp_Async = class;
  CoHisService_Hosp_AsyncEx = class;
  THisService_Hosp_Proxy = class;
  THisService_Hosp_AsyncProxy = class;
  THisService_Hosp_AsyncProxyEx = class;
  CoHisService_Base = class;
  CoHisService_Base_Async = class;
  CoHisService_Base_AsyncEx = class;
  THisService_Base_Proxy = class;
  THisService_Base_AsyncProxy = class;
  THisService_Base_AsyncProxyEx = class;
  CoHisService_YB = class;
  CoHisService_YB_Async = class;
  CoHisService_YB_AsyncEx = class;
  THisService_YB_Proxy = class;
  THisService_YB_AsyncProxy = class;
  THisService_YB_AsyncProxyEx = class;
  CoHisService_XNH = class;
  CoHisService_XNH_Async = class;
  CoHisService_XNH_AsyncEx = class;
  THisService_XNH_Proxy = class;
  THisService_XNH_AsyncProxy = class;
  THisService_XNH_AsyncProxyEx = class;
  CoHisService_Dict = class;
  CoHisService_Dict_Async = class;
  CoHisService_Dict_AsyncEx = class;
  THisService_Dict_Proxy = class;
  THisService_Dict_AsyncProxy = class;
  THisService_Dict_AsyncProxyEx = class;
  CoHisService_Extend = class;
  CoHisService_Extend_Async = class;
  CoHisService_Extend_AsyncEx = class;
  THisService_Extend_Proxy = class;
  THisService_Extend_AsyncProxy = class;
  THisService_Extend_AsyncProxyEx = class;
  CoHisService_Stat = class;
  CoHisService_Stat_Async = class;
  CoHisService_Stat_AsyncEx = class;
  THisService_Stat_Proxy = class;
  THisService_Stat_AsyncProxy = class;
  THisService_Stat_AsyncProxyEx = class;
  CoHisService_Login = class;
  CoHisService_Login_Async = class;
  CoHisService_Login_AsyncEx = class;
  THisService_Login_Proxy = class;
  THisService_Login_AsyncProxy = class;
  THisService_Login_AsyncProxyEx = class;
  CoHisService_Report = class;
  CoHisService_Report_Async = class;
  CoHisService_Report_AsyncEx = class;
  THisService_Report_Proxy = class;
  THisService_Report_AsyncProxy = class;
  THisService_Report_AsyncProxyEx = class;

  IHisService_System = interface(DataAbstract4_intf.IDataAbstractService)
  ['{1FC9C29C-F27D-43EC-8457-A461CA435F00}']
    function IsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string): Boolean;
    function ChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string): Boolean;
    function ResetPassword(const UserID: string; const NewPassword: string): Boolean;
    function WriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string): Integer;
    function GetParam(const AParamName: string; const ADefaultValue: Variant): Variant;
    procedure WriteParam(const AParamName: string; const AParamValue: Variant);
    function GetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer): string;
    function GetFieldMaxValue(const ATableName: string; const AFieldName: string): Variant;
    procedure SelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string);
  end;

  IHisService_System_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{CA2F6C94-2FEE-44BD-83F9-C1D9222143E0}']
    procedure Invoke_IsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string);
    procedure Invoke_ChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string);
    procedure Invoke_ResetPassword(const UserID: string; const NewPassword: string);
    procedure Invoke_WriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string);
    procedure Invoke_GetParam(const AParamName: string; const ADefaultValue: Variant);
    procedure Invoke_WriteParam(const AParamName: string; const AParamValue: Variant);
    procedure Invoke_GetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer);
    procedure Invoke_GetFieldMaxValue(const ATableName: string; const AFieldName: string);
    procedure Invoke_SelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string);
    function Retrieve_IsFieldValueExists: Boolean;
    function Retrieve_ChangePassword: Boolean;
    function Retrieve_ResetPassword: Boolean;
    function Retrieve_WriteLog: Integer;
    function Retrieve_GetParam: Variant;
    function Retrieve_GetNextNumber: string;
    function Retrieve_GetFieldMaxValue: Variant;
  end;

  IHisService_System_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{97F7A71A-CD7B-4836-8372-A95CD9823A07}']
    function BeginIsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginResetPassword(const UserID: string; const NewPassword: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginWriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginGetParam(const AParamName: string; const ADefaultValue: Variant; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginWriteParam(const AParamName: string; const AParamValue: Variant; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginGetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginGetFieldMaxValue(const ATableName: string; const AFieldName: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginSelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function EndIsFieldValueExists(const aRequest: IROAsyncRequest): Boolean;
    function EndChangePassword(const aRequest: IROAsyncRequest): Boolean;
    function EndResetPassword(const aRequest: IROAsyncRequest): Boolean;
    function EndWriteLog(const aRequest: IROAsyncRequest): Integer;
    function EndGetParam(const aRequest: IROAsyncRequest): Variant;
    procedure EndWriteParam(const aRequest: IROAsyncRequest);
    function EndGetNextNumber(const aRequest: IROAsyncRequest): string;
    function EndGetFieldMaxValue(const aRequest: IROAsyncRequest): Variant;
    procedure EndSelectOffice(const aRequest: IROAsyncRequest);
  end;

  CoHisService_System = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_System; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_System; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_System; overload;
  end;

  CoHisService_System_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_System_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_System_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_System_Async; overload;
  end;

  CoHisService_System_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_System_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_System_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_System_AsyncEx; overload;
  end;

  THisService_System_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_System)
  protected
    function __GetInterfaceName: String; override;
    function IsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string): Boolean;
    function ChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string): Boolean;
    function ResetPassword(const UserID: string; const NewPassword: string): Boolean;
    function WriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string): Integer;
    function GetParam(const AParamName: string; const ADefaultValue: Variant): Variant;
    procedure WriteParam(const AParamName: string; const AParamValue: Variant);
    function GetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer): string;
    function GetFieldMaxValue(const ATableName: string; const AFieldName: string): Variant;
    procedure SelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string);
  end;

  THisService_System_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_System_Async)
  protected
    function __GetInterfaceName: String; override;
    procedure Invoke_IsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string);
    procedure Invoke_ChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string);
    procedure Invoke_ResetPassword(const UserID: string; const NewPassword: string);
    procedure Invoke_WriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string);
    procedure Invoke_GetParam(const AParamName: string; const ADefaultValue: Variant);
    procedure Invoke_WriteParam(const AParamName: string; const AParamValue: Variant);
    procedure Invoke_GetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer);
    procedure Invoke_GetFieldMaxValue(const ATableName: string; const AFieldName: string);
    procedure Invoke_SelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string);
    function Retrieve_IsFieldValueExists: Boolean;
    function Retrieve_ChangePassword: Boolean;
    function Retrieve_ResetPassword: Boolean;
    function Retrieve_WriteLog: Integer;
    function Retrieve_GetParam: Variant;
    function Retrieve_GetNextNumber: string;
    function Retrieve_GetFieldMaxValue: Variant;
  end;

  THisService_System_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_System_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
    function BeginIsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginResetPassword(const UserID: string; const NewPassword: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginWriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginGetParam(const AParamName: string; const ADefaultValue: Variant; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginWriteParam(const AParamName: string; const AParamValue: Variant; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginGetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginGetFieldMaxValue(const ATableName: string; const AFieldName: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginSelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function EndIsFieldValueExists(const aRequest: IROAsyncRequest): Boolean;
    function EndChangePassword(const aRequest: IROAsyncRequest): Boolean;
    function EndResetPassword(const aRequest: IROAsyncRequest): Boolean;
    function EndWriteLog(const aRequest: IROAsyncRequest): Integer;
    function EndGetParam(const aRequest: IROAsyncRequest): Variant;
    procedure EndWriteParam(const aRequest: IROAsyncRequest);
    function EndGetNextNumber(const aRequest: IROAsyncRequest): string;
    function EndGetFieldMaxValue(const aRequest: IROAsyncRequest): Variant;
    procedure EndSelectOffice(const aRequest: IROAsyncRequest);
  end;

  IHisService_Clinic = interface(DataAbstract4_intf.IDataAbstractService)
  ['{1C385F48-3A91-4F12-83AE-D58168D762AF}']
  end;

  IHisService_Clinic_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{4C3F0101-8F78-4DA2-8AFE-84D6891FAEF6}']
  end;

  IHisService_Clinic_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{C7B99F77-39B6-4870-9D13-106CF2B1D3F3}']
  end;

  CoHisService_Clinic = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Clinic; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Clinic; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Clinic; overload;
  end;

  CoHisService_Clinic_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Clinic_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Clinic_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Clinic_Async; overload;
  end;

  CoHisService_Clinic_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Clinic_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Clinic_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Clinic_AsyncEx; overload;
  end;

  THisService_Clinic_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Clinic)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Clinic_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Clinic_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Clinic_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Clinic_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Medicine = interface(DataAbstract4_intf.IDataAbstractService)
  ['{E4228A93-FCF8-4622-9893-AA9E28733854}']
  end;

  IHisService_Medicine_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{3998D9C2-885D-49CA-BE55-9577D9ACE40E}']
  end;

  IHisService_Medicine_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{BD828CE2-B011-436C-9482-E1F98C9D8D07}']
  end;

  CoHisService_Medicine = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Medicine; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Medicine; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Medicine; overload;
  end;

  CoHisService_Medicine_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Medicine_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Medicine_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Medicine_Async; overload;
  end;

  CoHisService_Medicine_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Medicine_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Medicine_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Medicine_AsyncEx; overload;
  end;

  THisService_Medicine_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Medicine)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Medicine_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Medicine_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Medicine_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Medicine_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Hosp = interface(DataAbstract4_intf.IDataAbstractService)
  ['{11757C5E-F670-4A43-9D41-3240EF47F6C4}']
  end;

  IHisService_Hosp_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{24BED414-7F2F-490D-8388-59CE04065B86}']
  end;

  IHisService_Hosp_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{B6B0F217-ED94-4B97-B1FC-97C963DD4B09}']
  end;

  CoHisService_Hosp = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Hosp; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Hosp; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Hosp; overload;
  end;

  CoHisService_Hosp_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Hosp_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Hosp_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Hosp_Async; overload;
  end;

  CoHisService_Hosp_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Hosp_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Hosp_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Hosp_AsyncEx; overload;
  end;

  THisService_Hosp_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Hosp)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Hosp_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Hosp_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Hosp_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Hosp_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Base = interface(DataAbstract4_intf.IDataAbstractService)
  ['{4CE2B46D-A4ED-49F7-A61A-D191B6CE5AED}']
  end;

  IHisService_Base_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{B0A42AB1-8B21-45BA-AB5D-8B63610B13A0}']
  end;

  IHisService_Base_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{79174F2B-9B7E-44C0-911B-7A7A5C1A0AA0}']
  end;

  CoHisService_Base = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Base; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Base; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Base; overload;
  end;

  CoHisService_Base_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Base_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Base_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Base_Async; overload;
  end;

  CoHisService_Base_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Base_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Base_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Base_AsyncEx; overload;
  end;

  THisService_Base_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Base)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Base_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Base_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Base_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Base_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_YB = interface(DataAbstract4_intf.IDataAbstractService)
  ['{39B98954-04FC-4673-A0EF-4B25F2A9AD88}']
  end;

  IHisService_YB_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{EE678F82-DA61-4DE0-AF1D-D92B2066B4D6}']
  end;

  IHisService_YB_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{A28B1252-6CC6-4FD3-B9CD-38CBA3D9108C}']
  end;

  CoHisService_YB = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_YB; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_YB; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_YB; overload;
  end;

  CoHisService_YB_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_YB_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_YB_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_YB_Async; overload;
  end;

  CoHisService_YB_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_YB_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_YB_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_YB_AsyncEx; overload;
  end;

  THisService_YB_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_YB)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_YB_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_YB_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_YB_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_YB_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_XNH = interface(DataAbstract4_intf.IDataAbstractService)
  ['{2DCAC131-1FFD-471C-BFD5-ABD666917F71}']
  end;

  IHisService_XNH_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{0FE90D95-8647-4357-8179-EE3BB26D4B18}']
  end;

  IHisService_XNH_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{0C56E5B8-7918-4029-BB23-B89E7244572F}']
  end;

  CoHisService_XNH = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_XNH; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_XNH; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_XNH; overload;
  end;

  CoHisService_XNH_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_XNH_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_XNH_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_XNH_Async; overload;
  end;

  CoHisService_XNH_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_XNH_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_XNH_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_XNH_AsyncEx; overload;
  end;

  THisService_XNH_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_XNH)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_XNH_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_XNH_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_XNH_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_XNH_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Dict = interface(DataAbstract4_intf.IDataAbstractService)
  ['{723496C0-1F70-40F3-AAAF-B16C889409AC}']
  end;

  IHisService_Dict_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{980C1947-B279-424A-9718-471A0E95BDE9}']
  end;

  IHisService_Dict_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{4E990B5E-FA7A-42D9-AF4A-14E006AA5C26}']
  end;

  CoHisService_Dict = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Dict; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Dict; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Dict; overload;
  end;

  CoHisService_Dict_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Dict_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Dict_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Dict_Async; overload;
  end;

  CoHisService_Dict_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Dict_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Dict_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Dict_AsyncEx; overload;
  end;

  THisService_Dict_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Dict)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Dict_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Dict_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Dict_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Dict_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Extend = interface(DataAbstract4_intf.IDataAbstractService)
  ['{302E8555-52AC-493F-837C-674FB6D836D9}']
  end;

  IHisService_Extend_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{709A4F9E-5BFD-43CF-9F6C-9582A1017FED}']
  end;

  IHisService_Extend_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{AF1A9D42-4046-4DCF-B58A-8D9763F624DB}']
  end;

  CoHisService_Extend = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Extend; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Extend; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Extend; overload;
  end;

  CoHisService_Extend_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Extend_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Extend_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Extend_Async; overload;
  end;

  CoHisService_Extend_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Extend_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Extend_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Extend_AsyncEx; overload;
  end;

  THisService_Extend_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Extend)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Extend_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Extend_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Extend_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Extend_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Stat = interface(DataAbstract4_intf.IDataAbstractService)
  ['{061D6006-7BA4-4592-B850-062C42CE7C6F}']
  end;

  IHisService_Stat_Async = interface(DataAbstract4_intf.IDataAbstractService_Async)
  ['{3425FD90-8E89-43A9-B30A-CFF69E8C6E7A}']
  end;

  IHisService_Stat_AsyncEx = interface(DataAbstract4_intf.IDataAbstractService_AsyncEx)
  ['{8BC5E79D-A699-40DE-9FF3-B205088D37EA}']
  end;

  CoHisService_Stat = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Stat; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Stat; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Stat; overload;
  end;

  CoHisService_Stat_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Stat_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Stat_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Stat_Async; overload;
  end;

  CoHisService_Stat_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Stat_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Stat_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Stat_AsyncEx; overload;
  end;

  THisService_Stat_Proxy = class(DataAbstract4_intf.TDataAbstractService_Proxy, IHisService_Stat)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Stat_AsyncProxy = class(DataAbstract4_intf.TDataAbstractService_AsyncProxy, IHisService_Stat_Async)
  protected
    function __GetInterfaceName: String; override;
  end;

  THisService_Stat_AsyncProxyEx = class(DataAbstract4_intf.TDataAbstractService_AsyncProxyEx, IHisService_Stat_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
  end;

  IHisService_Login = interface(IROService)
  ['{10F949D2-44BC-4DCC-AF4B-7753639820E8}']
    function Login(const LoginText: string): string;
    procedure Logout;
  end;

  IHisService_Login_Async = interface(IROAsyncInterface)
  ['{AE22A587-E524-4C33-82F0-6B938C915226}']
    procedure Invoke_Login(const LoginText: string);
    procedure Invoke_Logout;
    function Retrieve_Login: string;
  end;

  IHisService_Login_AsyncEx = interface(IROAsyncInterfaceEx)
  ['{AA254A49-BBA1-4FC4-B833-F28C35F3A4C3}']
    function BeginLogin(const LoginText: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginLogout(const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function EndLogin(const aRequest: IROAsyncRequest): string;
    procedure EndLogout(const aRequest: IROAsyncRequest);
  end;

  CoHisService_Login = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Login; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Login; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Login; overload;
  end;

  CoHisService_Login_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Login_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Login_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Login_Async; overload;
  end;

  CoHisService_Login_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Login_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Login_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Login_AsyncEx; overload;
  end;

  THisService_Login_Proxy = class(TROProxy, IHisService_Login)
  protected
    function __GetInterfaceName: String; override;
    function Login(const LoginText: string): string;
    procedure Logout;
  end;

  THisService_Login_AsyncProxy = class(TROAsyncProxy, IHisService_Login_Async)
  protected
    function __GetInterfaceName: String; override;
    procedure Invoke_Login(const LoginText: string);
    procedure Invoke_Logout;
    function Retrieve_Login: string;
  end;

  THisService_Login_AsyncProxyEx = class(TROAsyncProxyEx, IHisService_Login_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
    function BeginLogin(const LoginText: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function BeginLogout(const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
    function EndLogin(const aRequest: IROAsyncRequest): string;
    procedure EndLogout(const aRequest: IROAsyncRequest);
  end;

  IHisService_Report = interface(IROService)
  ['{6C048047-65AB-41D3-992D-006CC36A489C}']
    function PrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer): Binary;
  end;

  IHisService_Report_Async = interface(IROAsyncInterface)
  ['{3FD01008-2A3F-4D39-92C8-949F17851573}']
    procedure Invoke_PrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer);
    function Retrieve_PrintReport: Binary;
  end;

  IHisService_Report_AsyncEx = interface(IROAsyncInterfaceEx)
  ['{E46AD459-E5BE-4B2F-9282-B116EE4386CD}']
    function BeginPrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer; const aCallback: TROAsyncCallback;
                              const aUserData: Pointer = nil): IROAsyncRequest;
    function EndPrintReport(const aRequest: IROAsyncRequest): Binary;
  end;

  CoHisService_Report = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Report; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Report; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Report; overload;
  end;

  CoHisService_Report_Async = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Report_Async; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Report_Async; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Report_Async; overload;
  end;

  CoHisService_Report_AsyncEx = class(System.TObject)
  public
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Report_AsyncEx; overload;
    class function Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Report_AsyncEx; overload;
    class function Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Report_AsyncEx; overload;
  end;

  THisService_Report_Proxy = class(TROProxy, IHisService_Report)
  protected
    function __GetInterfaceName: String; override;
    function PrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer): Binary;
  end;

  THisService_Report_AsyncProxy = class(TROAsyncProxy, IHisService_Report_Async)
  protected
    function __GetInterfaceName: String; override;
    procedure Invoke_PrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer);
    function Retrieve_PrintReport: Binary;
  end;

  THisService_Report_AsyncProxyEx = class(TROAsyncProxyEx, IHisService_Report_AsyncEx)
  protected
    function __GetInterfaceName: String; override;
    function BeginPrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer; const aCallback: TROAsyncCallback;
                              const aUserData: Pointer = nil): IROAsyncRequest;
    function EndPrintReport(const aRequest: IROAsyncRequest): Binary;
  end;

function DefaultNamespaces: String;
implementation

uses
  uROSerializer,
  uROClient,
  uROTransportChannel,
  uRORes;

function DefaultNamespaces: String;
var
  lres: String;
begin
  lres := DefaultNamespace;
  lres := (lres + ';') + DataAbstract4_Intf.DefaultNamespace;
  result := lres;
  exit;
end;

type
  { Forward declarations }
  TMyTransportChannel = class;

  TMyTransportChannel = class(TROTransportChannel)
  end;

class function CoHisService_System.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_System;
begin
  result := THisService_System_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_System.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_System;
begin
  result := THisService_System_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_System.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_System;
begin
  result := THisService_System_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_System_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_System_Async;
begin
  result := THisService_System_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_System_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_System_Async;
begin
  result := THisService_System_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_System_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_System_Async;
begin
  result := THisService_System_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_System_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_System_AsyncEx;
begin
  result := THisService_System_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_System_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_System_AsyncEx;
begin
  result := THisService_System_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_System_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_System_AsyncEx;
begin
  result := THisService_System_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_System_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_System';
  exit;
end;

function THisService_System_Proxy.IsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string): Boolean;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Boolean;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'IsFieldValueExists');
    lMessage.Write('ATableName', System.TypeInfo(string), ATableName, [paAsAnsiString]);
    lMessage.Write('AFieldName', System.TypeInfo(string), AFieldName, [paAsAnsiString]);
    lMessage.Write('AFieldValue', System.TypeInfo(string), AFieldValue, [paAsAnsiString]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Boolean), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_Proxy.ChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string): Boolean;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Boolean;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'ChangePassword');
    lMessage.Write('UserID', System.TypeInfo(string), UserID, [paAsAnsiString]);
    lMessage.Write('OldPassword', System.TypeInfo(string), OldPassword, [paAsAnsiString]);
    lMessage.Write('NewPassword', System.TypeInfo(string), NewPassword, [paAsAnsiString]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Boolean), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_Proxy.ResetPassword(const UserID: string; const NewPassword: string): Boolean;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Boolean;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'ResetPassword');
    lMessage.Write('UserID', System.TypeInfo(string), UserID, [paAsAnsiString]);
    lMessage.Write('NewPassword', System.TypeInfo(string), NewPassword, [paAsAnsiString]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Boolean), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_Proxy.WriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string): Integer;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Integer;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'WriteLog');
    lMessage.Write('AWorkerID', System.TypeInfo(Integer), AWorkerID, []);
    lMessage.Write('AFlag', System.TypeInfo(Integer), AFlag, []);
    lMessage.Write('ATitle', System.TypeInfo(string), ATitle, [paAsAnsiString]);
    lMessage.Write('AContent', System.TypeInfo(string), AContent, [paAsAnsiString]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Integer), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_Proxy.GetParam(const AParamName: string; const ADefaultValue: Variant): Variant;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Variant;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetParam');
    lMessage.Write('AParamName', System.TypeInfo(string), AParamName, [paAsAnsiString]);
    lMessage.Write('ADefaultValue', System.TypeInfo(Variant), ADefaultValue, []);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Variant), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

procedure THisService_System_Proxy.WriteParam(const AParamName: string; const AParamValue: Variant);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'WriteParam');
    lMessage.Write('AParamName', System.TypeInfo(string), AParamName, [paAsAnsiString]);
    lMessage.Write('AParamValue', System.TypeInfo(Variant), AParamValue, []);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

function THisService_System_Proxy.GetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer): string;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: string;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetNextNumber');
    lMessage.Write('NumberName', System.TypeInfo(string), NumberName, [paAsAnsiString]);
    lMessage.Write('NumberBits', System.TypeInfo(string), NumberBits, [paAsAnsiString]);
    lMessage.Write('YMDFlag', System.TypeInfo(Integer), YMDFlag, []);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(string), lResult, [paAsAnsiString]);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_Proxy.GetFieldMaxValue(const ATableName: string; const AFieldName: string): Variant;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Variant;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetFieldMaxValue');
    lMessage.Write('ATableName', System.TypeInfo(string), ATableName, [paAsAnsiString]);
    lMessage.Write('AFieldName', System.TypeInfo(string), AFieldName, [paAsAnsiString]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Variant), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

procedure THisService_System_Proxy.SelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'SelectOffice');
    lMessage.Write('OfficeID', System.TypeInfo(string), OfficeID, [paAsAnsiString]);
    lMessage.Write('OfficeName', System.TypeInfo(string), OfficeName, [paAsAnsiString]);
    lMessage.Write('OfficeUse', System.TypeInfo(string), OfficeUse, [paAsAnsiString]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

function THisService_System_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_System';
  exit;
end;

procedure THisService_System_AsyncProxy.Invoke_IsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('IsFieldValueExists');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'IsFieldValueExists');
    lMessage.Write('ATableName', System.TypeInfo(string), ATableName, [paAsAnsiString]);
    lMessage.Write('AFieldName', System.TypeInfo(string), AFieldName, [paAsAnsiString]);
    lMessage.Write('AFieldValue', System.TypeInfo(string), AFieldValue, [paAsAnsiString]);
    __DispatchAsyncRequest('IsFieldValueExists', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_ChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('ChangePassword');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'ChangePassword');
    lMessage.Write('UserID', System.TypeInfo(string), UserID, [paAsAnsiString]);
    lMessage.Write('OldPassword', System.TypeInfo(string), OldPassword, [paAsAnsiString]);
    lMessage.Write('NewPassword', System.TypeInfo(string), NewPassword, [paAsAnsiString]);
    __DispatchAsyncRequest('ChangePassword', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_ResetPassword(const UserID: string; const NewPassword: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('ResetPassword');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'ResetPassword');
    lMessage.Write('UserID', System.TypeInfo(string), UserID, [paAsAnsiString]);
    lMessage.Write('NewPassword', System.TypeInfo(string), NewPassword, [paAsAnsiString]);
    __DispatchAsyncRequest('ResetPassword', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_WriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('WriteLog');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'WriteLog');
    lMessage.Write('AWorkerID', System.TypeInfo(Integer), AWorkerID, []);
    lMessage.Write('AFlag', System.TypeInfo(Integer), AFlag, []);
    lMessage.Write('ATitle', System.TypeInfo(string), ATitle, [paAsAnsiString]);
    lMessage.Write('AContent', System.TypeInfo(string), AContent, [paAsAnsiString]);
    __DispatchAsyncRequest('WriteLog', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_GetParam(const AParamName: string; const ADefaultValue: Variant);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('GetParam');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetParam');
    lMessage.Write('AParamName', System.TypeInfo(string), AParamName, [paAsAnsiString]);
    lMessage.Write('ADefaultValue', System.TypeInfo(Variant), ADefaultValue, []);
    __DispatchAsyncRequest('GetParam', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_WriteParam(const AParamName: string; const AParamValue: Variant);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('WriteParam');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'WriteParam');
    lMessage.Write('AParamName', System.TypeInfo(string), AParamName, [paAsAnsiString]);
    lMessage.Write('AParamValue', System.TypeInfo(Variant), AParamValue, []);
    __DispatchAsyncRequest('WriteParam', lMessage, false);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_GetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('GetNextNumber');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetNextNumber');
    lMessage.Write('NumberName', System.TypeInfo(string), NumberName, [paAsAnsiString]);
    lMessage.Write('NumberBits', System.TypeInfo(string), NumberBits, [paAsAnsiString]);
    lMessage.Write('YMDFlag', System.TypeInfo(Integer), YMDFlag, []);
    __DispatchAsyncRequest('GetNextNumber', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_GetFieldMaxValue(const ATableName: string; const AFieldName: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('GetFieldMaxValue');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetFieldMaxValue');
    lMessage.Write('ATableName', System.TypeInfo(string), ATableName, [paAsAnsiString]);
    lMessage.Write('AFieldName', System.TypeInfo(string), AFieldName, [paAsAnsiString]);
    __DispatchAsyncRequest('GetFieldMaxValue', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_System_AsyncProxy.Invoke_SelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('SelectOffice');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'SelectOffice');
    lMessage.Write('OfficeID', System.TypeInfo(string), OfficeID, [paAsAnsiString]);
    lMessage.Write('OfficeName', System.TypeInfo(string), OfficeName, [paAsAnsiString]);
    lMessage.Write('OfficeUse', System.TypeInfo(string), OfficeUse, [paAsAnsiString]);
    __DispatchAsyncRequest('SelectOffice', lMessage, false);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

function THisService_System_AsyncProxy.Retrieve_IsFieldValueExists: Boolean;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Boolean;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('IsFieldValueExists');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Boolean), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxy.Retrieve_ChangePassword: Boolean;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Boolean;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('ChangePassword');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Boolean), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxy.Retrieve_ResetPassword: Boolean;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Boolean;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('ResetPassword');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Boolean), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxy.Retrieve_WriteLog: Integer;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Integer;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('WriteLog');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Integer), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxy.Retrieve_GetParam: Variant;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Variant;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('GetParam');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Variant), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxy.Retrieve_GetNextNumber: string;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: string;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('GetNextNumber');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(string), lResult, [paAsAnsiString]);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxy.Retrieve_GetFieldMaxValue: Variant;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Variant;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('GetFieldMaxValue');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Variant), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_System';
  exit;
end;

function THisService_System_AsyncProxyEx.BeginIsFieldValueExists(const ATableName: string; const AFieldName: string; const AFieldValue: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'IsFieldValueExists');
    lMessage.Write('ATableName', System.TypeInfo(string), ATableName, [paAsAnsiString]);
    lMessage.Write('AFieldName', System.TypeInfo(string), AFieldName, [paAsAnsiString]);
    lMessage.Write('AFieldValue', System.TypeInfo(string), AFieldValue, [paAsAnsiString]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginChangePassword(const UserID: string; const OldPassword: string; const NewPassword: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'ChangePassword');
    lMessage.Write('UserID', System.TypeInfo(string), UserID, [paAsAnsiString]);
    lMessage.Write('OldPassword', System.TypeInfo(string), OldPassword, [paAsAnsiString]);
    lMessage.Write('NewPassword', System.TypeInfo(string), NewPassword, [paAsAnsiString]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginResetPassword(const UserID: string; const NewPassword: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'ResetPassword');
    lMessage.Write('UserID', System.TypeInfo(string), UserID, [paAsAnsiString]);
    lMessage.Write('NewPassword', System.TypeInfo(string), NewPassword, [paAsAnsiString]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginWriteLog(const AWorkerID: Integer; const AFlag: Integer; const ATitle: string; const AContent: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'WriteLog');
    lMessage.Write('AWorkerID', System.TypeInfo(Integer), AWorkerID, []);
    lMessage.Write('AFlag', System.TypeInfo(Integer), AFlag, []);
    lMessage.Write('ATitle', System.TypeInfo(string), ATitle, [paAsAnsiString]);
    lMessage.Write('AContent', System.TypeInfo(string), AContent, [paAsAnsiString]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginGetParam(const AParamName: string; const ADefaultValue: Variant; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetParam');
    lMessage.Write('AParamName', System.TypeInfo(string), AParamName, [paAsAnsiString]);
    lMessage.Write('ADefaultValue', System.TypeInfo(Variant), ADefaultValue, []);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginWriteParam(const AParamName: string; const AParamValue: Variant; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'WriteParam');
    lMessage.Write('AParamName', System.TypeInfo(string), AParamName, [paAsAnsiString]);
    lMessage.Write('AParamValue', System.TypeInfo(Variant), AParamValue, []);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginGetNextNumber(const NumberName: string; const NumberBits: string; const YMDFlag: Integer; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetNextNumber');
    lMessage.Write('NumberName', System.TypeInfo(string), NumberName, [paAsAnsiString]);
    lMessage.Write('NumberBits', System.TypeInfo(string), NumberBits, [paAsAnsiString]);
    lMessage.Write('YMDFlag', System.TypeInfo(Integer), YMDFlag, []);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginGetFieldMaxValue(const ATableName: string; const AFieldName: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'GetFieldMaxValue');
    lMessage.Write('ATableName', System.TypeInfo(string), ATableName, [paAsAnsiString]);
    lMessage.Write('AFieldName', System.TypeInfo(string), AFieldName, [paAsAnsiString]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.BeginSelectOffice(const OfficeID: string; const OfficeName: string; const OfficeUse: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'SelectOffice');
    lMessage.Write('OfficeID', System.TypeInfo(string), OfficeID, [paAsAnsiString]);
    lMessage.Write('OfficeName', System.TypeInfo(string), OfficeName, [paAsAnsiString]);
    lMessage.Write('OfficeUse', System.TypeInfo(string), OfficeUse, [paAsAnsiString]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.EndIsFieldValueExists(const aRequest: IROAsyncRequest): Boolean;
var
  lResult: Boolean;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Boolean), lResult, []);
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.EndChangePassword(const aRequest: IROAsyncRequest): Boolean;
var
  lResult: Boolean;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Boolean), lResult, []);
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.EndResetPassword(const aRequest: IROAsyncRequest): Boolean;
var
  lResult: Boolean;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Boolean), lResult, []);
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.EndWriteLog(const aRequest: IROAsyncRequest): Integer;
var
  lResult: Integer;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Integer), lResult, []);
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.EndGetParam(const aRequest: IROAsyncRequest): Variant;
var
  lResult: Variant;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Variant), lResult, []);
  result := lResult;
  exit;
end;

procedure THisService_System_AsyncProxyEx.EndWriteParam(const aRequest: IROAsyncRequest);
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
end;

function THisService_System_AsyncProxyEx.EndGetNextNumber(const aRequest: IROAsyncRequest): string;
var
  lResult: string;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(string), lResult, [paAsAnsiString]);
  result := lResult;
  exit;
end;

function THisService_System_AsyncProxyEx.EndGetFieldMaxValue(const aRequest: IROAsyncRequest): Variant;
var
  lResult: Variant;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Variant), lResult, []);
  result := lResult;
  exit;
end;

procedure THisService_System_AsyncProxyEx.EndSelectOffice(const aRequest: IROAsyncRequest);
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
end;

class function CoHisService_Clinic.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Clinic;
begin
  result := THisService_Clinic_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Clinic.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Clinic;
begin
  result := THisService_Clinic_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Clinic.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Clinic;
begin
  result := THisService_Clinic_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Clinic_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Clinic_Async;
begin
  result := THisService_Clinic_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Clinic_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Clinic_Async;
begin
  result := THisService_Clinic_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Clinic_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Clinic_Async;
begin
  result := THisService_Clinic_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Clinic_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Clinic_AsyncEx;
begin
  result := THisService_Clinic_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Clinic_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Clinic_AsyncEx;
begin
  result := THisService_Clinic_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Clinic_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Clinic_AsyncEx;
begin
  result := THisService_Clinic_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Clinic_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Clinic';
  exit;
end;

function THisService_Clinic_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Clinic';
  exit;
end;

function THisService_Clinic_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Clinic';
  exit;
end;

class function CoHisService_Medicine.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Medicine;
begin
  result := THisService_Medicine_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Medicine.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Medicine;
begin
  result := THisService_Medicine_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Medicine.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Medicine;
begin
  result := THisService_Medicine_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Medicine_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Medicine_Async;
begin
  result := THisService_Medicine_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Medicine_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Medicine_Async;
begin
  result := THisService_Medicine_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Medicine_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Medicine_Async;
begin
  result := THisService_Medicine_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Medicine_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Medicine_AsyncEx;
begin
  result := THisService_Medicine_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Medicine_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Medicine_AsyncEx;
begin
  result := THisService_Medicine_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Medicine_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Medicine_AsyncEx;
begin
  result := THisService_Medicine_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Medicine_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Medicine';
  exit;
end;

function THisService_Medicine_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Medicine';
  exit;
end;

function THisService_Medicine_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Medicine';
  exit;
end;

class function CoHisService_Hosp.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Hosp;
begin
  result := THisService_Hosp_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Hosp.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Hosp;
begin
  result := THisService_Hosp_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Hosp.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Hosp;
begin
  result := THisService_Hosp_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Hosp_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Hosp_Async;
begin
  result := THisService_Hosp_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Hosp_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Hosp_Async;
begin
  result := THisService_Hosp_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Hosp_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Hosp_Async;
begin
  result := THisService_Hosp_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Hosp_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Hosp_AsyncEx;
begin
  result := THisService_Hosp_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Hosp_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Hosp_AsyncEx;
begin
  result := THisService_Hosp_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Hosp_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Hosp_AsyncEx;
begin
  result := THisService_Hosp_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Hosp_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Hosp';
  exit;
end;

function THisService_Hosp_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Hosp';
  exit;
end;

function THisService_Hosp_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Hosp';
  exit;
end;

class function CoHisService_Base.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Base;
begin
  result := THisService_Base_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Base.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Base;
begin
  result := THisService_Base_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Base.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Base;
begin
  result := THisService_Base_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Base_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Base_Async;
begin
  result := THisService_Base_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Base_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Base_Async;
begin
  result := THisService_Base_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Base_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Base_Async;
begin
  result := THisService_Base_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Base_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Base_AsyncEx;
begin
  result := THisService_Base_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Base_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Base_AsyncEx;
begin
  result := THisService_Base_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Base_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Base_AsyncEx;
begin
  result := THisService_Base_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Base_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Base';
  exit;
end;

function THisService_Base_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Base';
  exit;
end;

function THisService_Base_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Base';
  exit;
end;

class function CoHisService_YB.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_YB;
begin
  result := THisService_YB_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_YB.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_YB;
begin
  result := THisService_YB_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_YB.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_YB;
begin
  result := THisService_YB_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_YB_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_YB_Async;
begin
  result := THisService_YB_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_YB_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_YB_Async;
begin
  result := THisService_YB_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_YB_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_YB_Async;
begin
  result := THisService_YB_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_YB_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_YB_AsyncEx;
begin
  result := THisService_YB_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_YB_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_YB_AsyncEx;
begin
  result := THisService_YB_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_YB_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_YB_AsyncEx;
begin
  result := THisService_YB_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_YB_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_YB';
  exit;
end;

function THisService_YB_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_YB';
  exit;
end;

function THisService_YB_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_YB';
  exit;
end;

class function CoHisService_XNH.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_XNH;
begin
  result := THisService_XNH_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_XNH.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_XNH;
begin
  result := THisService_XNH_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_XNH.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_XNH;
begin
  result := THisService_XNH_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_XNH_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_XNH_Async;
begin
  result := THisService_XNH_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_XNH_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_XNH_Async;
begin
  result := THisService_XNH_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_XNH_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_XNH_Async;
begin
  result := THisService_XNH_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_XNH_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_XNH_AsyncEx;
begin
  result := THisService_XNH_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_XNH_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_XNH_AsyncEx;
begin
  result := THisService_XNH_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_XNH_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_XNH_AsyncEx;
begin
  result := THisService_XNH_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_XNH_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_XNH';
  exit;
end;

function THisService_XNH_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_XNH';
  exit;
end;

function THisService_XNH_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_XNH';
  exit;
end;

class function CoHisService_Dict.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Dict;
begin
  result := THisService_Dict_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Dict.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Dict;
begin
  result := THisService_Dict_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Dict.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Dict;
begin
  result := THisService_Dict_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Dict_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Dict_Async;
begin
  result := THisService_Dict_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Dict_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Dict_Async;
begin
  result := THisService_Dict_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Dict_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Dict_Async;
begin
  result := THisService_Dict_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Dict_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Dict_AsyncEx;
begin
  result := THisService_Dict_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Dict_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Dict_AsyncEx;
begin
  result := THisService_Dict_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Dict_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Dict_AsyncEx;
begin
  result := THisService_Dict_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Dict_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Dict';
  exit;
end;

function THisService_Dict_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Dict';
  exit;
end;

function THisService_Dict_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Dict';
  exit;
end;

class function CoHisService_Extend.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Extend;
begin
  result := THisService_Extend_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Extend.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Extend;
begin
  result := THisService_Extend_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Extend.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Extend;
begin
  result := THisService_Extend_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Extend_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Extend_Async;
begin
  result := THisService_Extend_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Extend_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Extend_Async;
begin
  result := THisService_Extend_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Extend_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Extend_Async;
begin
  result := THisService_Extend_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Extend_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Extend_AsyncEx;
begin
  result := THisService_Extend_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Extend_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Extend_AsyncEx;
begin
  result := THisService_Extend_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Extend_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Extend_AsyncEx;
begin
  result := THisService_Extend_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Extend_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Extend';
  exit;
end;

function THisService_Extend_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Extend';
  exit;
end;

function THisService_Extend_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Extend';
  exit;
end;

class function CoHisService_Stat.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Stat;
begin
  result := THisService_Stat_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Stat.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Stat;
begin
  result := THisService_Stat_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Stat.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Stat;
begin
  result := THisService_Stat_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Stat_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Stat_Async;
begin
  result := THisService_Stat_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Stat_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Stat_Async;
begin
  result := THisService_Stat_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Stat_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Stat_Async;
begin
  result := THisService_Stat_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Stat_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Stat_AsyncEx;
begin
  result := THisService_Stat_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Stat_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Stat_AsyncEx;
begin
  result := THisService_Stat_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Stat_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Stat_AsyncEx;
begin
  result := THisService_Stat_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Stat_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Stat';
  exit;
end;

function THisService_Stat_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Stat';
  exit;
end;

function THisService_Stat_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Stat';
  exit;
end;

class function CoHisService_Login.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Login;
begin
  result := THisService_Login_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Login.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Login;
begin
  result := THisService_Login_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Login.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Login;
begin
  result := THisService_Login_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Login_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Login_Async;
begin
  result := THisService_Login_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Login_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Login_Async;
begin
  result := THisService_Login_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Login_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Login_Async;
begin
  result := THisService_Login_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Login_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Login_AsyncEx;
begin
  result := THisService_Login_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Login_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Login_AsyncEx;
begin
  result := THisService_Login_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Login_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Login_AsyncEx;
begin
  result := THisService_Login_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Login_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Login';
  exit;
end;

function THisService_Login_Proxy.Login(const LoginText: string): string;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: string;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'Login');
    lMessage.Write('LoginText', System.TypeInfo(string), LoginText, [paAsUTF8String]);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(string), lResult, [paAsUTF8String]);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

procedure THisService_Login_Proxy.Logout;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'Logout');
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

function THisService_Login_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Login';
  exit;
end;

procedure THisService_Login_AsyncProxy.Invoke_Login(const LoginText: string);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('Login');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'Login');
    lMessage.Write('LoginText', System.TypeInfo(string), LoginText, [paAsUTF8String]);
    __DispatchAsyncRequest('Login', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

procedure THisService_Login_AsyncProxy.Invoke_Logout;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('Logout');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'Logout');
    __DispatchAsyncRequest('Logout', lMessage, false);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

function THisService_Login_AsyncProxy.Retrieve_Login: string;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: string;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    __response := __RetrieveAsyncResponse('Login');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(string), lResult, [paAsUTF8String]);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_Login_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Login';
  exit;
end;

function THisService_Login_AsyncProxyEx.BeginLogin(const LoginText: string; const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'Login');
    lMessage.Write('LoginText', System.TypeInfo(string), LoginText, [paAsUTF8String]);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_Login_AsyncProxyEx.BeginLogout(const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'Logout');
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_Login_AsyncProxyEx.EndLogin(const aRequest: IROAsyncRequest): string;
var
  lResult: string;
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(string), lResult, [paAsUTF8String]);
  result := lResult;
  exit;
end;

procedure THisService_Login_AsyncProxyEx.EndLogout(const aRequest: IROAsyncRequest);
begin
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
end;

class function CoHisService_Report.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Report;
begin
  result := THisService_Report_Proxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Report.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Report;
begin
  result := THisService_Report_Proxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Report.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Report;
begin
  result := THisService_Report_Proxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Report_Async.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Report_Async;
begin
  result := THisService_Report_AsyncProxy.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Report_Async.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Report_Async;
begin
  result := THisService_Report_AsyncProxy.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Report_Async.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Report_Async;
begin
  result := THisService_Report_AsyncProxy.Create(aUrl, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Report_AsyncEx.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IHisService_Report_AsyncEx;
begin
  result := THisService_Report_AsyncProxyEx.Create(aMessage, aTransportChannel);
  exit;
end;

class function CoHisService_Report_AsyncEx.Create(const aUri: TROUri; aDefaultNamespaces: String = ''): IHisService_Report_AsyncEx;
begin
  result := THisService_Report_AsyncProxyEx.Create(aUri, aDefaultNamespaces);
  exit;
end;

class function CoHisService_Report_AsyncEx.Create(const aUrl: String; aDefaultNamespaces: String = ''): IHisService_Report_AsyncEx;
begin
  result := THisService_Report_AsyncProxyEx.Create(aUrl, aDefaultNamespaces);
  exit;
end;

function THisService_Report_Proxy.__GetInterfaceName: String;
begin
  result := 'HisService_Report';
  exit;
end;

function THisService_Report_Proxy.PrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer): Binary;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: Binary;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lResult := nil;
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'PrintReport');
    lMessage.Write('ReportName', System.TypeInfo(string), ReportName, [paAsAnsiString]);
    lMessage.Write('ParamNames', System.TypeInfo(DataAbstract4_intf.StringArray), ParamNames, []);
    lMessage.Write('ParamValues', System.TypeInfo(DataAbstract4_intf.StringArray), ParamValues, []);
    lMessage.Write('Flag', System.TypeInfo(Integer), Flag, []);
    lMessage.Finalize();

    lTransportChannel.Dispatch(lMessage);

    lMessage.Read('Result', System.TypeInfo(Binary), lResult, []);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage.FreeStream();
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_Report_AsyncProxy.__GetInterfaceName: String;
begin
  result := 'HisService_Report';
  exit;
end;

procedure THisService_Report_AsyncProxy.Invoke_PrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer);
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    __AssertProxyNotBusy('PrintReport');

    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'PrintReport');
    lMessage.Write('ReportName', System.TypeInfo(string), ReportName, [paAsAnsiString]);
    lMessage.Write('ParamNames', System.TypeInfo(DataAbstract4_intf.StringArray), ParamNames, []);
    lMessage.Write('ParamValues', System.TypeInfo(DataAbstract4_intf.StringArray), ParamValues, []);
    lMessage.Write('Flag', System.TypeInfo(Integer), Flag, []);
    __DispatchAsyncRequest('PrintReport', lMessage);
  finally
    lMessage.UnsetAttributes(lTransportChannel);
    lMessage := nil;
    lTransportChannel := nil;
  end;
end;

function THisService_Report_AsyncProxy.Retrieve_PrintReport: Binary;
var
  __response: TStream;
  tc: TMyTransportChannel;
  lRetry: Boolean;
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lFreeStream: Boolean;
  lResult: Binary;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  lFreeStream := false;
  try
    lResult := nil;
    __response := __RetrieveAsyncResponse('PrintReport');
    try
      try
        try
          lMessage.ReadFromStream(__response, lFreeStream);
        except
          on E: Exception do begin
            lFreeStream := true;
            raise;
          end;
        end;

        lMessage.Read('Result', System.TypeInfo(Binary), lResult, []);
      except
        on E: EROSessionNotFound do begin
          tc := TMyTransportChannel(lTransportChannel.GetTransportObject());
          lRetry := false;
          tc.DoLoginNeeded(lMessage, E, lRetry);
          if not lRetry then begin
            raise;
          end;
        end;
        on E: Exception do begin
          raise;
        end;
      end;
    finally
      if lFreeStream then begin
        __response.Free();
      end;
    end;
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_Report_AsyncProxyEx.__GetInterfaceName: String;
begin
  result := 'HisService_Report';
  exit;
end;

function THisService_Report_AsyncProxyEx.BeginPrintReport(const ReportName: string; const ParamNames: DataAbstract4_intf.StringArray; const ParamValues: DataAbstract4_intf.StringArray; const Flag: Integer;
                                                          const aCallback: TROAsyncCallback; const aUserData: Pointer = nil): IROAsyncRequest;
var
  lMessage: IROMessage;
  lTransportChannel: IROTransportChannel;
  lResult: IROAsyncRequest;
begin
  lMessage := __GetMessage();
  lMessage.SetAutoGeneratedNamespaces(DefaultNamespaces());
  lTransportChannel := __TransportChannel;
  try
    lMessage.InitializeRequestMessage(lTransportChannel, 'HisLibrary', __InterfaceName, 'PrintReport');
    lMessage.Write('ReportName', System.TypeInfo(string), ReportName, [paAsAnsiString]);
    lMessage.Write('ParamNames', System.TypeInfo(DataAbstract4_intf.StringArray), ParamNames, []);
    lMessage.Write('ParamValues', System.TypeInfo(DataAbstract4_intf.StringArray), ParamValues, []);
    lMessage.Write('Flag', System.TypeInfo(Integer), Flag, []);
    lResult := __DispatchAsyncRequest(lMessage, aCallback, aUserData);
  finally
    lMessage := nil;
    lTransportChannel := nil;
  end;
  result := lResult;
  exit;
end;

function THisService_Report_AsyncProxyEx.EndPrintReport(const aRequest: IROAsyncRequest): Binary;
var
  lResult: Binary;
begin
  lResult := nil;
  aRequest.ReadResponse();
  aRequest.Message.SetAutoGeneratedNamespaces(DefaultNamespaces());
  aRequest.Message.Read('Result', System.TypeInfo(Binary), lResult, []);
  result := lResult;
  exit;
end;

initialization
  RegisterProxyClass(IHisService_System_IID, THisService_System_Proxy);
  RegisterProxyClass(IHisService_Clinic_IID, THisService_Clinic_Proxy);
  RegisterProxyClass(IHisService_Medicine_IID, THisService_Medicine_Proxy);
  RegisterProxyClass(IHisService_Hosp_IID, THisService_Hosp_Proxy);
  RegisterProxyClass(IHisService_Base_IID, THisService_Base_Proxy);
  RegisterProxyClass(IHisService_YB_IID, THisService_YB_Proxy);
  RegisterProxyClass(IHisService_XNH_IID, THisService_XNH_Proxy);
  RegisterProxyClass(IHisService_Dict_IID, THisService_Dict_Proxy);
  RegisterProxyClass(IHisService_Extend_IID, THisService_Extend_Proxy);
  RegisterProxyClass(IHisService_Stat_IID, THisService_Stat_Proxy);
  RegisterProxyClass(IHisService_Login_IID, THisService_Login_Proxy);
  RegisterProxyClass(IHisService_Report_IID, THisService_Report_Proxy);
finalization
  UnregisterProxyClass(IHisService_System_IID);
  UnregisterProxyClass(IHisService_Clinic_IID);
  UnregisterProxyClass(IHisService_Medicine_IID);
  UnregisterProxyClass(IHisService_Hosp_IID);
  UnregisterProxyClass(IHisService_Base_IID);
  UnregisterProxyClass(IHisService_YB_IID);
  UnregisterProxyClass(IHisService_XNH_IID);
  UnregisterProxyClass(IHisService_Dict_IID);
  UnregisterProxyClass(IHisService_Extend_IID);
  UnregisterProxyClass(IHisService_Stat_IID);
  UnregisterProxyClass(IHisService_Login_IID);
  UnregisterProxyClass(IHisService_Report_IID);
end.

